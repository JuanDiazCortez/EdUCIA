Morph subclass: #CPUMorph	instanceVariableNames: 'estado'	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!CPUMorph commentStamp: 'jmdc 3/14/2018 20:27' prior: 0!ventana!!CPUMorph methodsFor: 'as yet unclassified' stamp: 'jmdc 3/15/2018 19:38'!drawOn: aCanvas	""	| btnToolbar boton morph bou btnFont |	bou := 0 @ 0 extent: 800 @ 600.	super drawOn: aCanvas.	self bounds: bou.	self position: 10 @ 10.	morph := BorderedMorph new		borderStyle:			(SimpleBorder new				width: 4;				baseColor: Color white);		layoutPolicy: TableLayout new;		bounds: bou.	self addMorph: morph.	btnFont := StandardFonts buttonFont.			10 timesRepeat: [ btnToolbar := self createButton.			btnToolbar position: (btnToolbar position + 10) .			self addMorph: btnToolbar ]! !!CPUMorph methodsFor: 'as yet unclassified' stamp: 'jmdc 3/15/2018 19:18'!createButton	^ SimpleButtonMorph new		target: Beeper;		label: 'Beep!!';		actionSelector: #beep;		yourself! !!CPUMorph methodsFor: 'as yet unclassified' stamp: 'jmdc 3/14/2018 21:25'!browseAction   estado := false.	MorphicUIManager default inform: 'Click'! !!CPUMorph methodsFor: 'as yet unclassified' stamp: 'jmdc 3/14/2018 21:24'!state	^ estado ! !!CPUMorph methodsFor: 'as yet unclassified' stamp: 'jmdc 3/14/2018 21:20'!initialize	super initialize.	estado := true.! !!CPUMorph methodsFor: 'as yet unclassified' stamp: 'jmdc 3/15/2018 19:17'!createButton2	^ (PluggableButtonMorph on: self getState: #state action: #browseAction)		label: 'Browse';		yourself! !Object subclass: #EduRoot	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!EduRoot commentStamp: 'jmdc 2/22/2018 12:38' prior: 0!root!!EduRoot methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 12:40'!initialize	""! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!EduRoot class	instanceVariableNames: ''!!EduRoot class methodsFor: 'instance creation' stamp: 'jmdc 2/22/2018 12:40'!new	^ super new initialize! !EduRoot subclass: #Arquitecture	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!Arquitecture commentStamp: 'jmdc 2/22/2018 12:59' prior: 0!arq!EduRoot subclass: #CPU	instanceVariableNames: 'registers pc micro'	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!CPU commentStamp: 'jmdc 2/22/2018 12:37' prior: 0!cpu!!CPU methodsFor: 'accessing' stamp: 'jmdc 2/22/2018 12:54'!startPoint	^ 0! !!CPU methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 12:53'!initializeMicroInstructions! !!CPU methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 13:07'!loadProgram	ProgramLoader default loadProgramOn: self ! !!CPU methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 12:54'!initializeRegisters	 pc:= self startPoint.! !!CPU methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 12:53'!initializeMemory! !!CPU methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 12:52'!initialize	self		initializeRegisters;		initializeMemory;		initializeMicroInstructions;		loadProgram;		run! !!CPU methodsFor: 'running' stamp: 'jmdc 2/22/2018 12:53'!run! !EduRoot subclass: #ClockManager	instanceVariableNames: 'process'	classVariableNames: 'Instance'	poolDictionaries: ''	category: 'Educia-Core0'!!ClockManager commentStamp: 'jmdc 2/22/2018 12:37' prior: 0!clock!!ClockManager methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 12:50'!initialize""	[ true ]		whileTrue: [ (Delay forMilliseconds: 10) wait.			^ self tick ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ClockManager class	instanceVariableNames: ''!!ClockManager class methodsFor: 'accessing' stamp: 'jmdc 2/22/2018 12:43'!default	^ Instance ifNil: [ Instance := super new ]! !EduRoot subclass: #Hardware	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!Hardware commentStamp: 'jmdc 2/22/2018 13:01' prior: 0!hw!Hardware subclass: #Memory	instanceVariableNames: 'storage'	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!Memory commentStamp: 'jmdc 2/22/2018 12:39' prior: 0!memory!!Memory methodsFor: 'accessing' stamp: 'jmdc 2/22/2018 13:05'!at: aAddres 	^ storage  at: aAddres value! !!Memory methodsFor: 'accessing' stamp: 'jmdc 2/22/2018 13:06'!at: aAddres put:  aData 	^ storage  at: aAddres value put: aData  ! !!Memory methodsFor: 'initialization' stamp: 'jmdc 2/22/2018 13:04'!initialize	storage := Dictionary new.! !Arquitecture subclass: #MicroInstrucction	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MicroInstrucction commentStamp: 'jmdc 2/22/2018 12:39' prior: 0!micro!EduRoot subclass: #ProgramLoader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!ProgramLoader commentStamp: 'jmdc 2/22/2018 13:06' prior: 0!Load de program!!ProgramLoader methodsFor: 'as yet unclassified' stamp: 'jmdc 2/22/2018 13:07'!loadProgramOn: aCPU! !Arquitecture subclass: #Registers	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!Registers commentStamp: 'jmdc 2/22/2018 12:55' prior: 0!register!Hardware subclass: #ValueAccess	instanceVariableNames: 'value'	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!ValueAccess commentStamp: 'jmdc 2/22/2018 13:02' prior: 0!value!ValueAccess subclass: #Address	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!Address commentStamp: 'jmdc 2/22/2018 13:02' prior: 0!dire!ValueAccess subclass: #Data	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!Data commentStamp: 'jmdc 2/22/2018 13:01' prior: 0!data!ValueAccess subclass: #Instruccions	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!Instruccions commentStamp: 'jmdc 2/22/2018 12:37' prior: 0!instt!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Instruccions class	instanceVariableNames: ''!!Instruccions class methodsFor: 'accessing' stamp: 'jmdc 2/22/2018 18:32'!clear	"self allSubclasses do:[ :each |   Smalltalk removeKey: each name ifAbsent:[]  ]."	Instruccions allSubclasses do: [ :each | Instruccions removeSubclass: each ]! !Instruccions subclass: #ADC	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!ADC commentStamp: '<historical>' prior: 0!Add with carryRd := Rn + Op2 + Carry!Instruccions subclass: #ADD	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!ADD commentStamp: '<historical>' prior: 0!AddRd := Rn + Op2!Instruccions subclass: #AND	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!AND commentStamp: '<historical>' prior: 0!ANDRd := Rn AND Op2!Instruccions subclass: #B	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!B commentStamp: '<historical>' prior: 0!BranchR15 := address!Instruccions subclass: #BIC	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!BIC commentStamp: '<historical>' prior: 0!Bit ClearRd := Rn AND NOT Op2!Instruccions subclass: #BL	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!BL commentStamp: '<historical>' prior: 0!Branch with LinkR14 := R15, R15 := address!Instruccions subclass: #BX	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!BX commentStamp: '<historical>' prior: 0!Branch and ExchangeR15 := Rn,!Instruccions subclass: #CDP	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!CDP commentStamp: '<historical>' prior: 0!Coprocesor Data Processing(Coprocessor-specific)!Instruccions subclass: #CMN	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!CMN commentStamp: '<historical>' prior: 0!Compare NegativeCPSR flags := Rn + Op2!Instruccions subclass: #CMP	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!CMP commentStamp: '<historical>' prior: 0!CompareCPSR flags := Rn - Op2!Instruccions subclass: #EOR	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!EOR commentStamp: '<historical>' prior: 0!Exclusive ORRd := (Rn AND NOT Op2)!Instruccions subclass: #LDC	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!LDC commentStamp: '<historical>' prior: 0!Load coprocessor fromCoprocessor load!Instruccions subclass: #LDM	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!LDM commentStamp: '<historical>' prior: 0!Load multiple registersStack manipulation (Pop)!Instruccions subclass: #LDR	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!LDR commentStamp: '<historical>' prior: 0!Load register from memoryRd := (address)!Instruccions subclass: #MCR	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MCR commentStamp: '<historical>' prior: 0!Move CPU register tocRn := rRn {<op>cRm}!Instruccions subclass: #MLA	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MLA commentStamp: '<historical>' prior: 0!Multiply AccumulateRd := (Rm * Rs) + Rn!Instruccions subclass: #MOV	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MOV commentStamp: '<historical>' prior: 0!Move register or constantRd : = Op2!Instruccions subclass: #MRC	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MRC commentStamp: '<historical>' prior: 0!Move from coprocessorRn := cRn {<op>cRm}!Instruccions subclass: #MRS	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MRS commentStamp: '<historical>' prior: 0!Move PSR status/flags toRn := PSR!Instruccions subclass: #MSR	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MSR commentStamp: '<historical>' prior: 0!Move register to PSRPSR := Rm!Instruccions subclass: #MUL	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MUL commentStamp: '<historical>' prior: 0!MultiplyRd := Rm * Rs!Instruccions subclass: #MVN	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!MVN commentStamp: '<historical>' prior: 0!Move negative registerRd := 0xFFFFFFFF EOR Op2!Instruccions subclass: #ORR	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!ORR commentStamp: '<historical>' prior: 0!ORRd := Rn OR Op2!Instruccions subclass: #RSB	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!RSB commentStamp: '<historical>' prior: 0!Reverse SubtractRd := Op2 - Rn!Instruccions subclass: #RSC	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!RSC commentStamp: '<historical>' prior: 0!Reverse Subtract with CarryRd := Op2 - Rn - 1 + Carry!Instruccions subclass: #SBC	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!SBC commentStamp: '<historical>' prior: 0!Subtract with CarryRd := Rn - Op2 - 1 + Carry!Instruccions subclass: #STC	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!STC commentStamp: '<historical>' prior: 0!Store coprocessor register toaddress := CRn!Instruccions subclass: #STM	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!STM commentStamp: '<historical>' prior: 0!Store MultipleStack manipulation (Push)!Instruccions subclass: #STR	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!STR commentStamp: '<historical>' prior: 0!Store register to memory<address> := Rd!Instruccions subclass: #SUB	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!SUB commentStamp: '<historical>' prior: 0!SubtractRd := Rn - Op2!Instruccions subclass: #SWI	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!SWI commentStamp: '<historical>' prior: 0!Software InterruptOS call!Instruccions subclass: #SWP	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!SWP commentStamp: '<historical>' prior: 0!Swap register with memoryRd := [Rn], [Rn] := Rm!Instruccions subclass: #TEQ	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!TEQ commentStamp: '<historical>' prior: 0!Test bitwise equalityCPSR flags := Rn EOR Op2!Instruccions subclass: #TST	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Educia-Core0'!!TST commentStamp: '<historical>' prior: 0!Test bitsCPSR flags := Rn AND Op2!